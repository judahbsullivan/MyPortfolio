---
import Link from '@/components/ui/Link.astro';
import DirectusImage from '@/components/ui/DirectusImage.astro';

// Normalized card shape shared with MasonGrid
type CardItem = {
  slug?: string | null;
  title?: string | null;
  description?: string | null;
  image?: string | null;
  published_at?: string | null;
};

interface Props {
  posts: CardItem[];
  class?: string;
  base?: 'post' | 'project';
}

const { posts, class: className, base = 'post' } = Astro.props as Props;

function getSummary(post: CardItem): string {
  const raw = (post.description || '') as string;
  if (!raw) return '';
  const text = raw.replace(/<[^>]*>/g, ' ').replace(/\s+/g, ' ').trim();
  return text;
}
---

<div class={`w-full ${className || ''}`}>
  <div id="posts-table-wrap" class="relative divide-y divide-gray-200 border-t border-gray-200">
    {posts.map((post, index) => (
      <Link
        href={`/${base}/${post.slug}`}
        class="post-row group relative flex items-baseline justify-between gap-6 py-5"
        data-index={index}
      >
        <div class="min-w-0">
          <h3 class="truncate text-base font-medium tracking-tight text-gray-900 group-hover:text-blue-600 transition-colors">
            {post.title}
          </h3>
          {getSummary(post) && (
            <p class="mt-1 text-sm text-gray-600 line-clamp-2">
              {getSummary(post)}
            </p>
          )}
        </div>
        <div class="flex shrink-0 items-center gap-4 text-sm">
          {post.published_at && (
            <span class="text-gray-500">
              {new Date(post.published_at).toLocaleDateString()}
            </span>
          )}
          <span class="text-gray-400 group-hover:text-gray-800 transition-colors">â†’</span>
        </div>
      </Link>
    ))}

    <!-- Shared hover preview container -->
    <div id="post-preview" class="pointer-events-none absolute origin-top-left scale-0 opacity-0 transition-all duration-300 ease-out" style="left: 100%; top: 50%;">
      <div id="post-preview-frame" class="h-36 w-56 overflow-hidden rounded-lg shadow-xl ring-1 ring-black/5 bg-white">
        <div id="post-preview-slider" data-count={posts.length} class="relative transition-transform duration-500 ease-out flex flex-col-reverse">
          {posts.map((post) => (
            <div class="h-36 w-56">
              {post.image && (
                <DirectusImage
                  imageId={post.image}
                  alt={post.title || 'Preview image'}
                  class="h-full w-full object-cover"
                />
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  import registerTableHooks from './Table.barba.ts';
  registerTableHooks();
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
